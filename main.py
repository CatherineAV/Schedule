import flet as ft
import create_db as db
from db_operations import get_table_data, get_table_columns, insert_data

# –¶–≤–µ—Ç–æ–≤—ã–µ –ø–∞–ª–∏—Ç—Ä—ã
PALETTE = ["#18363E", "#5F97AA", "#2D5F6E", "#3E88A5", "#93C4D1"]

db.init_db()


def main(page: ft.Page):
    page.title = "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
    page.bgcolor = PALETTE[4]
    page.horizontal_alignment = "stretch"
    page.vertical_alignment = "start"
    page.window.min_width = 1000
    page.window.min_height = 600
    page.window.center()
    page.padding = 0
    page.spacing = 0

    menu_column = ft.Column(spacing=10, expand=True)

    # –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä - –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    content = ft.Container(
        content=ft.Text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", size=16),
        expand=True,
        bgcolor=ft.Colors.WHITE,
        padding=20,
        margin=ft.margin.only(left=20),
        border_radius=15,
    )

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã—Ö
    def create_data_table(data, columns):
        data_rows = []
        for row in data:
            cells = []
            for idx, col in enumerate(columns):
                txt = ft.Text(str(row.get(col, "")), color=PALETTE[2], no_wrap=False)

                cell = ft.DataCell(
                    ft.Container(txt, expand=True, alignment=ft.alignment.center_left)
                )
                cells.append(cell)
            data_rows.append(ft.DataRow(cells=cells))

        return ft.DataTable(
            columns=[ft.DataColumn(ft.Text(c, weight="bold", color=PALETTE[2])) for c in columns],
            rows=data_rows,
            expand=True,
            divider_thickness=0
        )

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    def create_add_form(table_name, columns, on_submit):
        form_fields = []
        for column in columns:
            if column.lower() != 'id':  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª–µ ID
                form_fields.append(
                    ft.TextField(
                        label=column,
                        border_color=PALETTE[1],
                    )
                )

        return ft.Column([
            ft.Text(f"–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ {table_name}", size=18, weight="bold"),
            *form_fields,
            ft.Row([
                ft.ElevatedButton(
                    "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
                    style=ft.ButtonStyle(bgcolor=PALETTE[3], color="white"),
                    on_click=on_submit
                ),
                ft.ElevatedButton(
                    "–û—Ç–º–µ–Ω–∞",
                    style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white"),
                    on_click=lambda e: render_data_pane(table_name)
                )
            ])
        ])

    # –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ –º–µ–Ω—é
    def render_main_menu(e=None):
        menu_column.controls.clear()
        menu_column.controls.extend([
            ft.ElevatedButton(
                "–î–∞–Ω–Ω—ã–µ",
                icon=ft.Icons.FOLDER,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=render_data_menu),
            ft.ElevatedButton(
                "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏",
                icon=ft.Icons.SETTINGS,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=render_settings),
            ft.ElevatedButton(
                "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å",
                icon=ft.Icons.PLAY_ARROW,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=render_generate),
        ])
        content.content = ft.Column([
            ft.Text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.", size=16)
        ], alignment=ft.MainAxisAlignment.CENTER, horizontal_alignment=ft.CrossAxisAlignment.CENTER)
        page.update()

    def render_data_menu(e=None):
        menu_column.controls.clear()
        menu_column.controls.extend([
            ft.ElevatedButton(
                "–ù–∞–∑–∞–¥",
                icon=ft.Icons.ARROW_BACK,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=render_main_menu),
            ft.Divider(height=20, color=ft.Colors.WHITE),
            ft.ElevatedButton(
                "–ì—Ä—É–ø–ø—ã",
                icon=ft.Icons.GROUPS,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=lambda e: render_data_pane("–ì—Ä—É–ø–ø—ã")),
            ft.ElevatedButton(
                "–ü—Ä–µ–¥–º–µ—Ç—ã",
                icon=ft.Icons.CLASS_,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=lambda e: render_data_pane("–ü—Ä–µ–¥–º–µ—Ç—ã")),
            ft.ElevatedButton(
                "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏",
                icon=ft.Icons.MAN,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=lambda e: render_data_pane("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏")),
            ft.ElevatedButton(
                "–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏",
                icon=ft.Icons.MAP,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=lambda e: render_data_pane("–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏")),
            ft.ElevatedButton(
                "–ö–∞–±–∏–Ω–µ—Ç—ã",
                icon=ft.Icons.PLACE,
                style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                on_click=lambda e: render_data_pane("–ö–∞–±–∏–Ω–µ—Ç—ã")),
        ])
        content.content = ft.Column([
            ft.Text("–†–∞–∑–¥–µ–ª –î–∞–Ω–Ω—ã–µ. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å.", size=16)
        ], alignment=ft.MainAxisAlignment.CENTER, horizontal_alignment=ft.CrossAxisAlignment.CENTER)
        page.update()

    def render_data_pane(section_name):
        data = get_table_data(section_name)
        columns = get_table_columns(section_name)

        data_table = create_data_table(data, columns)

        # –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
        table_scroll = ft.ListView(
            [data_table],
            expand=True,
            spacing=0,
            padding=0,
            auto_scroll=False
        )

        # –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        content.content = ft.Column([
            ft.Row([
                ft.Text(section_name, size=20, weight="bold", color=PALETTE[2]),
                ft.ElevatedButton(
                    text="üû¢",
                    style=ft.ButtonStyle(
                        bgcolor=PALETTE[3], color="white", padding=16, shape=ft.CircleBorder()
                    ),
                    on_click=lambda e: render_add_form(section_name, columns)
                )
            ]),
            ft.Divider(height=20, color=PALETTE[1]),
            ft.Container(
                content=table_scroll,
                expand=True,
                padding=10,
                border=ft.border.all(1, color=PALETTE[1]),
                border_radius=5,
            )
        ], expand=True)

        page.update()

    def render_add_form(table_name, columns):
        form_fields_ref = {}

        def on_form_submit(e):
            data = {}
            for column in columns:
                if column.lower() != 'id' and column in form_fields_ref:
                    data[column] = form_fields_ref[column].value

            if insert_data(table_name, data):
                ft.toast(f"–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ {table_name}!")
                render_data_pane(table_name)
            else:
                ft.toast(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ {table_name}")

        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
        form_content = ft.Column([
            ft.Text(f"–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ {table_name}", size=18, weight="bold")
        ])

        for column in columns:
            if column.lower() != 'id':
                field = ft.TextField(
                    label=column,
                    border_color=PALETTE[0],
                )
                form_fields_ref[column] = field
                form_content.controls.append(field)

        form_content.controls.extend([
            ft.Row([
                ft.ElevatedButton(
                    "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
                    style=ft.ButtonStyle(bgcolor=PALETTE[3], color="white", padding=20),
                    on_click=on_form_submit
                ),
                ft.ElevatedButton(
                    "–û—Ç–º–µ–Ω–∞",
                    style=ft.ButtonStyle(bgcolor=PALETTE[2], color="white", padding=20),
                    on_click=lambda e: render_data_pane(table_name)
                )
            ])
        ])

        content.content = ft.Container(
            content=form_content,
            padding=20
        )
        page.update()

    def render_settings(e=None):
        content.content = ft.Column([
            ft.Text("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.", size=16, color=PALETTE[0])
        ], alignment=ft.MainAxisAlignment.CENTER, horizontal_alignment=ft.CrossAxisAlignment.CENTER)
        page.update()

    def render_generate(e=None):
        content.content = ft.Column([
            ft.Text("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.", size=16, color=PALETTE[0])
        ], alignment=ft.MainAxisAlignment.CENTER, horizontal_alignment=ft.CrossAxisAlignment.CENTER)
        page.update()

    # –ü–µ—Ä–≤–∏—á–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä
    render_main_menu()

    # –ú–∞–∫–µ—Ç: –º–µ–Ω—é —Å–ª–µ–≤–∞, –∫–æ–Ω—Ç–µ–Ω—Ç —Å–ø—Ä–∞–≤–∞ - –æ–±–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ
    page.add(
        ft.Row(
            [
                # –ú–µ–Ω—é - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã
                ft.Container(
                    content=menu_column,
                    width=260,
                    bgcolor=PALETTE[1],
                    padding=20,
                    #margin=ft.margin.only(top=20, bottom=20, left=20),
                    #border_radius=15,
                ),
                # –ö–æ–Ω—Ç–µ–Ω—Ç - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π
                ft.Container(
                    content=content,
                    expand=True,
                    margin=ft.margin.only(top=20, bottom=20, right=20, left=0),
                ),
            ],
            expand=True,
            spacing=0,
        )
    )


ft.app(target=main)
